{"version":3,"sources":["webpack:///webpack/bootstrap 0f8491dd9aa3cd7739e8","webpack:///./src/word.js","webpack:///./src/dictionary.js","webpack:///./src/processing/processing_modules/ProcessModule.js","webpack:///./src/processing/processing_modules/ClearPunctuatio.js"],"names":[],"mappings":"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","file":"ggg.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0f8491dd9aa3cd7739e8","export class Word {\n    constructor(word){\n        this.word = word;\n    }\n\n    getWord(){\n        return this.word;\n    }\n\n    getWithOut(){\n        \n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/word.js","import {Word} from \"./word\";\n\nexport class Dictionary{\n    constructor(texts){\n        this.words = [];\n        this.spliceInWords(texts);\n    }\n\n    spliceInWords(texts){\n        let processWord = texts.split(\" \");\n        for(let i = 0; i < processWord.length; i++){\n            this.words[i] = new Word(processWord[i]);\n        }\n    }\n\n    atWord(index){\n        return this.words[index];\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/dictionary.js","export class ProcessModule {\n\n    constructor(){\n    }\n\n    startProcessing(text){\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/processing/processing_modules/ProcessModule.js","import {ProcessModule} from './ProcessModule';\n\nexport class ClearPunctuatio extends ProcessModule{\n\n    constructor(){\n        super();\n        //TODO: it\"s metainfo, need expand in config file. (Best way)\n        this.IgnoreSymbols = [\n            \"\\\\{\", \"\\\\}\", \"\\\\!\", \"\\\\@\", \"\\\\#\", \"\\\\$\", \"\\\\%\", \"\\\\^\", \"\\\\&\", \"\\\\*\", \"\\\\(\", \"\\\\)\", \"\\\\=\", \"\\\\+\", \"\\\\<\",\n            \"\\\\>\", \"\\\\,\", \"\\\\.\", \"\\\\;\", \"\\\\/\", \"\\\\~\", \"\\\\?\", \"\\\\|\", \"\\\\[\", \"\\\\]\", \" \\\\- \", \" \\\\-\", \"\\\\- \",\n            \"(n|)\\\\'.\\\\w*\", \"not\"  // it's delete next matches (n'*, '*) example didn't -> did , don't -> do, hasn't, has\n        ];\n    }\n\n    isIgnoreSymbol(symbol)\n    {\n        for(let i = 0; i < this.IgnoreSymols.length; i++){\n            if(symbol === this.IgnoreSymbols[i]) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    startProcessing(text){\n        let regex;\n        for(let i = 0; i < this.IgnoreSymbols.length; i++){\n            regex = new RegExp(this.IgnoreSymbols[i], \"g\");\n            text = text.replace(regex, ' ');\n        }\n        text = text.replace(/\\s\\s+/g, ' ');\n        text = text.split(\" \");\n        return text;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/processing/processing_modules/ClearPunctuatio.js"],"sourceRoot":""}